?mono_light
??mono_light
all.equal(.1, .3/3)
.1 == .3 / 3
grow <- function(n) {
vec <- numeric(0)
for(i in 1:n) vec <- c(vec, i)
}
subscript <- function(n) {
vec <- numeric(n)
for(i in 1:n) vec[i] <- i
}
colon_op <- function(n) {
vec <- 1:n
}
n <- 1000000
bench::mark(
grow(n),
subscript(n),
colon_op(n)
)[c("expression", "min", "median", "itr/sec", "n_gc")]
n <- 100
bench::mark(
grow(n),
subscript(n),
colon_op(n)
)[c("expression", "min", "median", "itr/sec", "n_gc")]
grow <- function(n) {
vec <- numeric(0)
for(i in 1:n) vec <- c(vec, i)
}
subscript <- function(n) {
vec <- numeric(n)
for(i in 1:n) vec[i] <- i
}
colon_op <- function(n) {
vec <- 1:n
}
n <- 100
bench::mark(
grow(n),
subscript(n),
colon_op(n)
)[c("expression", "min", "median", "itr/sec", "n_gc")]
colon_op(100)
grow <- function(n) {
vec <- numeric(0)
for(i in 1:n) vec <- c(vec, i)
return(vec)
}
subscript <- function(n) {
vec <- numeric(n)
for(i in 1:n) vec[i] <- i
return(vec)
}
colon_op <- function(n) {
vec <- 1:n
return(vec)
}
colon_op(100)
n <- 100
bench::mark(
grow(n),
subscript(n),
colon_op(n)
)[c("expression", "min", "median", "itr/sec", "n_gc")]
non_vectorized <- function(x) {
lsum <- 0
for(i in 1:length(x)) {
lsum <- lsum + log(x[i])
}
return(lsum)
}
vectorized <- function(x) {
lsum <- sum(log(x))
return(lsum)
}
x <- 100
bench::mark(non_vectorized(x), vectorized(x)
)[c("expression", "min", "median", "itr/sec", "n_gc")]
non_vectorized <- function(x) {
lsum <- 0
for(i in 1:length(x)) {
lsum <- lsum + log(x[i])
}
return(lsum)
}
vectorized <- function(x) {
lsum <- sum(log(x))
return(lsum)
}
x <- 1000
bench::mark(non_vectorized(x), vectorized(x)
)[c("expression", "min", "median", "itr/sec", "n_gc")]å
non_vectorized <- function(x) {
lsum <- 0
for(i in 1:length(x)) {
lsum <- lsum + log(x[i])
}
return(lsum)
}
vectorized <- function(x) {
lsum <- sum(log(x))
return(lsum)
}
x <- 100
bench::mark(non_vectorized(x), vectorized(x)
)[c("expression", "min", "median", "itr/sec", "n_gc")]å
x <- 1000
bench::mark(non_vectorized(x), vectorized(x)
)[c("expression", "min", "median", "itr/sec", "n_gc")]
apply
View(vectorized)
